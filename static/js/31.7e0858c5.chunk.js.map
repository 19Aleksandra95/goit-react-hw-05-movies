{"version":3,"file":"static/js/31.7e0858c5.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","pages/MovieDetails.styled.js","components/Button/Button.styled.js","components/Button/Button.jsx","pages/MovieDetails.jsx","services/Api.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  margin-top: 20px;\n  img {\n    border-radius: 5px;\n  }\n`;","\nimport React, {useEffect, useState} from 'react';\nimport { useParams} from 'react-router-dom';\n\nimport { fetchMovieCast } from 'services/Api';\nimport { List, Item } from './Cast.styled';\nimport noImage from '../images/noimageavailable.jpg'\n\nconst Cast = () => {\n    const {movieId} = useParams();\n    const [cast, setCast] = useState([]);\n\nuseEffect(() => {\n    //Otrzymanie informacji aktywnego filmu z API\n\n    const movieCast = async () =>{\n        try {\n            const response = await fetchMovieCast(movieId);\n            setCast(response)\n        } catch (error) {\n            console.log(error);\n        } \n    };\n    movieCast();\n}, [movieId]);\n\nreturn (\n    <>\n      {cast.length !== 0 && (\n        <div>\n          <h2>Movie Cast</h2>\n          <List>\n            {cast.map(actor => (\n              <Item key={actor.id}>\n                <img\n                  width=\"200px\"\n                  height=\"300px\"\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                      : `${noImage}`\n                  }\n                  alt={actor.original_name}\n                />\n                <p>{actor.name}</p>\n              </Item>\n            ))}\n          </List>\n        </div>\n      )}\n      {cast.length === 0 && <div>We don't have any cast for this movie.</div>}\n    </>\n  );\n};\n\nexport default Cast;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieReviews } from 'services/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    // Отримання оглядів фільму з API\n    const movieReviews = async () => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","import styled from 'styled-components';\nimport propTypes from 'prop-types';\n\nimport background from '../components/images/wallpapermovie.jpg';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  &::before {\n    content: '';\n    display: block;\n    background-color: rgb(255 255 255);\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  }\n\n  &::after {\n    content: '';\n    position: fixed;\n    top: 0px;\n    left: -5px;\n    width: calc(100% + 10px);\n    height: calc(100vh + 10px);\n    background-image: ${props =>\n      props.backdrop\n        ? `url('https://image.tmdb.org/t/p/w500/${props.backdrop}')`\n        : `url(${background})`};\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    filter: blur(5px);\n    z-index: -1;\n    opacity: 0.35;\n  }\n\n  @media screen and (max-width: 768px) {\n    padding: 0 5px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  flex: 0 0 auto;\n  margin-right: 30px;\n`;\n\nexport const Image = styled.img`\n  max-height: 500px;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 10px;\n  align-self: flex-start;\n`;\n\nexport const Description = styled.div`\n  flex: 1 1 auto;\n`;\n\nexport const ProdCompany = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-top: 10px;\n`;\n\nContainer.propTypes = {\n  backdrop: propTypes.string,\n};","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  padding: 8px 16px;\n  margin: 0 16px 16px 0;\n  border: none;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-size: 16px;\n  background-color: #064e8a;\n  cursor: pointer;\n`;","import { Btn } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ text }) => {\n  return <Btn type=\"button\">{text}</Btn>;\n};\nexport default Button;\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};","import React, { useEffect, useState, useRef, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\n\nimport { fetchMovieDetails } from '../services/Api';\nimport {\n  Container,\n  Description,\n  ImageContainer,\n  Image,\n  ProdCompany,\n} from './MovieDetails.styled';\nimport noimage from 'components/images/noimageavailable.jpg';\nimport Button from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    // Отримання деталів фільму з API\n    const movieDetails = async () => {\n      try {\n        const movie = await fetchMovieDetails(movieId);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <Loader />;\n  }\n\n  const productionCompaniesList = movieDetails.production_companies?.map(\n    ({ id, logo_path, name }) =>\n      logo_path && (\n        <li key={id}>\n          {logo_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${logo_path}`}\n              alt={name}\n              style={{\n                maxHeight: 50,\n                maxWidth: 200,\n                marginRight: 30,\n                marginTop: 10,\n              }}\n            />\n          )}\n        </li>\n      )\n  );\n\n  // Calculate rounded popularity percentage\n  const roundedPopularity = Math.round(movieDetails.vote_average * 10);\n\n  return (\n    <div>\n      <Link to={backLinkHref.current}>\n        <Button text=\"⬅️ Go back\" />\n      </Link>\n      <Container backdrop={movieDetails.backdrop_path}>\n        <Description>\n          <h1>{movieDetails.title}</h1>\n          <h4>User score: {roundedPopularity}%</h4>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {movieDetails.genres.map(genre => (\n              <span key={genre.id}> {genre.name}</span>\n            ))}\n          </p>\n          {productionCompaniesList[0] !== null &&\n            productionCompaniesList.length > 0 && (\n              <>\n                <h2>Production companies</h2>\n                <ProdCompany>{productionCompaniesList}</ProdCompany>\n              </>\n            )}\n        </Description>\n        <ImageContainer>\n          <Image\n            src={\n              movieDetails.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                : `${noimage}`\n            }\n            alt={movieDetails.title}\n          />\n        </ImageContainer>\n      </Container>\n      <hr />\n      <h3>Additional information</h3>\n      <Link to=\"cast\">\n        <Button text=\"Cast\" />\n      </Link>\n      <Link to=\"reviews\">\n        <Button text=\"Reviews\" />\n      </Link>\n      <hr />\n      <Suspense>\n        {<Reviews/>}\n        {<Cast />}\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst API_KEY = '39e4b2f9bba332bb5cb147ab564ab267';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n\nconst params = {\nparams: {\n   api_key: API_KEY,\n   language: 'en-US', \n},\n};\n\n export const fetchTrendingMovies = async () => {\nconst response = await axios.get(`trending/movie/day`, params);\nreturn response.data.results;\n}\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}`, params);\n    return response.data;\n    }\n\n    export const handleSearch = async movieName => {\n        const response = await axios.get(`/search/movie?query=${movieName}`, params);\n        return response.data.results;\n        }\n\n        export const fetchMovieCast = async movieId => {\n            const response = await axios.get(`movie/${movieId}/credits?`, params);\n            return response.data.cast;\n            }\n\n            export const fetchMovieReviews = async movieId => {\n                const response = await axios.get(`movie/${movieId}/reviews?`, params);\n                return response.data.results;\n                }\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieCast","sent","t0","console","log","stop","apply","arguments","_jsxs","_Fragment","children","length","_jsx","map","actor","width","height","src","profile_path","concat","noImage","alt","original_name","name","id","reviews","setReviews","movieReviews","fetchMovieReviews","error","review","author","content","Container","props","backdrop","background","ImageContainer","Image","_templateObject3","Description","_templateObject4","ProdCompany","_templateObject5","propTypes","Btn","text","type","_location$state","_movieDetails$product","movieDetails","setMovieDetails","location","useLocation","backLinkHref","useRef","state","from","movie","fetchMovieDetails","Loader","productionCompaniesList","production_companies","_ref2","logo_path","style","maxHeight","maxWidth","marginRight","marginTop","roundedPopularity","Math","round","vote_average","Link","to","current","Button","backdrop_path","title","overview","genres","genre","poster_path","noimage","Suspense","Reviews","Cast","Outlet","axios","params","api_key","language","fetchTrendingMovies","abrupt","data","results","_callee2","_context2","_x","handleSearch","_ref3","_callee3","movieName","_context3","_x2","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}